version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: enviro_edu_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - enviro_network

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - enviro_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/enviro_edu_dev
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    env_file:
      - ./backend/.env
    networks:
      - enviro_network
    restart: unless-stopped

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/enviro_edu_dev
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    env_file:
      - ./backend/.env
    networks:
      - enviro_network
    restart: unless-stopped

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A config beat -l info
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    environment:
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/enviro_edu_dev
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    env_file:
      - ./backend/.env
    networks:
      - enviro_network
    restart: unless-stopped

  # Nginx (optional, for serving static files)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - static_files:/var/www/static
      - media_files:/var/www/media
    depends_on:
      - backend
    networks:
      - enviro_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  media_files:
  static_files:

networks:
  enviro_network:
    driver: bridge