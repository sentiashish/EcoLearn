# Generated by Django 4.2.7 on 2025-09-09 22:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('challenges', '0003_alter_carbonfootprint_unique_together_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChallengeData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('Easy', 'Easy'), ('Medium', 'Medium'), ('Hard', 'Hard')], default='Easy', max_length=10)),
                ('category', models.CharField(max_length=100)),
                ('points', models.PositiveIntegerField(default=100)),
                ('submissions', models.PositiveIntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('time_limit', models.CharField(max_length=50)),
                ('tags', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Challenge Data',
                'verbose_name_plural': 'Challenge Data',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_completed', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('carbon_footprint_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submission', to='challenges.carbonfootprint')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_submissions', to='challenges.challengedata')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submitted_at'],
                'indexes': [models.Index(fields=['user', 'challenge'], name='challenges__user_id_197fdf_idx'), models.Index(fields=['challenge', 'score'], name='challenges__challen_3e3f8f_idx')],
                'unique_together': {('user', 'challenge', 'submitted_at')},
            },
        ),
    ]
